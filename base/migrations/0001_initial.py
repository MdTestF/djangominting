# Generated by Django 3.2.12 on 2022-04-01 05:52

import base.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_boUser', models.BooleanField(default=False)),
                ('is_norUser', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=300)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.CharField(max_length=200)),
                ('action_control_name', models.CharField(max_length=200, null=True)),
                ('action_name', models.CharField(max_length=200, unique=True)),
                ('action_description', models.CharField(max_length=700, null=True)),
            ],
            options={
                'db_table': 'Action',
            },
        ),
        migrations.CreateModel(
            name='PinataUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upImage', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'Role',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=base.models.upload_path)),
                ('url', models.URLField(default='val', max_length=600)),
                ('status', models.CharField(default='Uploaded', max_length=200, null=True)),
                ('is_accept', models.CharField(default='Pending', max_length=200, null=True)),
                ('is_qcPassed', models.CharField(default='Not Passed', max_length=200, null=True)),
                ('collectionName', models.CharField(max_length=200, null=True)),
                ('collectionSym', models.CharField(max_length=200, null=True)),
                ('is_readyForNft', models.CharField(default='Not yet', max_length=200, null=True)),
                ('comment', models.TextField(default='No Comment')),
                ('userWalletAddress', models.CharField(max_length=200, null=True)),
                ('contractAddress', models.CharField(max_length=200, null=True)),
                ('imageCID', models.CharField(max_length=200, null=True)),
                ('jsonCID', models.CharField(max_length=200, null=True)),
                ('pinataUpload', models.CharField(default='Not Yet', max_length=200, null=True)),
                ('openSeaUpload', models.CharField(default='Not Yet', max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('minted', models.CharField(default='Not yet', max_length=200, null=True)),
                ('soled', models.CharField(default='Not yet', max_length=200, null=True)),
                ('sellOrder', models.CharField(default='Not yet', max_length=200, null=True)),
                ('islocal', models.BooleanField()),
                ('imageselltype', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('isgeneratevariation', models.BooleanField()),
                ('product_title', models.CharField(default='title', max_length=200)),
                ('price', models.PositiveBigIntegerField(default='0', null=True)),
                ('sale_price', models.PositiveBigIntegerField(default='0', null=True)),
                ('short_description', models.CharField(max_length=500, null=True)),
                ('description', models.CharField(max_length=1200, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='RoleUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'RoleUser',
                'unique_together': {('role', 'user')},
            },
        ),
        migrations.CreateModel(
            name='RoleAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.action')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.role')),
            ],
            options={
                'db_table': 'RoleAction',
                'unique_together': {('role', 'action')},
            },
        ),
    ]
